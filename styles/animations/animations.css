/* CSS @property for animated gradients and wave positions */
@property --gradient-angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

@property --gradient-angle-offset {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

@property --wave-x {
    syntax: '<percentage>';
    initial-value: 20%;
    inherits: false;
}

@property --wave-y {
    syntax: '<percentage>';
    initial-value: 50%;
    inherits: false;
}

@property --wave-x2 {
    syntax: '<percentage>';
    initial-value: 80%;
    inherits: false;
}

@property --wave-y2 {
    syntax: '<percentage>';
    initial-value: 50%;
    inherits: false;
}

/* 基础渐入动画 */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* 旋转渐变边框动画 */
@keyframes rotateGradient {
    0% {
        --gradient-angle: 0deg;
    }
    100% {
        --gradient-angle: 360deg;
    }
}

/* 向上渐入动画 */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 向下渐入动画 */
@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 缩放渐入动画 */
@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* 悬浮动画 */
@keyframes float {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(0);
    }
}

/* 脉冲动画 - 用于吸引注意力 */
@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

/* 加载指示器动画 */
@keyframes progressGrow {
    0% {
        width: 0%;
    }
    100% {
        width: 100%;
    }
}

@keyframes pulseGlow {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
    }
}

/* 加载指示器的闪烁效果 */
@keyframes shimmer {
    0% {
        background-position: -100% 0;
    }
    100% {
        background-position: 200% 0;
    }
}

/* 图片淡入效果 */
.progressive-image {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

.progressive-image.loaded {
    opacity: 1;
}

/* 视口内元素动画 */
.viewport-element {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s var(--transition-smooth), transform 0.6s var(--transition-smooth);
}

.viewport-element.in-view {
    opacity: 1;
    transform: translateY(0);
}

/* 不同方向的reveal动画 */
.reveal-up {
    opacity: 0;
    transform: translateY(40px);
    transition: opacity 0.7s cubic-bezier(0.4, 0, 0.2, 1), transform 0.7s cubic-bezier(0.4, 0, 0.2, 1);
}

.reveal-up.in-view {
    opacity: 1;
    transform: translateY(0);
}

.reveal-down {
    opacity: 0;
    transform: translateY(-40px);
    transition: opacity 0.7s cubic-bezier(0.4, 0, 0.2, 1), transform 0.7s cubic-bezier(0.4, 0, 0.2, 1);
}

.reveal-down.in-view {
    opacity: 1;
    transform: translateY(0);
}

.reveal-left {
    opacity: 0;
    transform: translateX(-40px);
    transition: opacity 0.7s cubic-bezier(0.4, 0, 0.2, 1), transform 0.7s cubic-bezier(0.4, 0, 0.2, 1);
}

.reveal-left.in-view {
    opacity: 1;
    transform: translateX(0);
}

.reveal-right {
    opacity: 0;
    transform: translateX(40px);
    transition: opacity 0.7s cubic-bezier(0.4, 0, 0.2, 1), transform 0.7s cubic-bezier(0.4, 0, 0.2, 1);
}

.reveal-right.in-view {
    opacity: 1;
    transform: translateX(0);
}

.reveal-scale {
    opacity: 0;
    transform: scale(0.9);
    transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.reveal-scale.in-view {
    opacity: 1;
    transform: scale(1);
}

/* 文字分割reveal动画 */
.text-reveal .char {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    animation: charReveal 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes charReveal {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 梯级延迟效果 */
.stagger > * {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.stagger.in-view > *:nth-child(1) { transition-delay: 0.05s; }
.stagger.in-view > *:nth-child(2) { transition-delay: 0.1s; }
.stagger.in-view > *:nth-child(3) { transition-delay: 0.15s; }
.stagger.in-view > *:nth-child(4) { transition-delay: 0.2s; }
.stagger.in-view > *:nth-child(5) { transition-delay: 0.25s; }
.stagger.in-view > *:nth-child(6) { transition-delay: 0.3s; }
.stagger.in-view > *:nth-child(7) { transition-delay: 0.35s; }
.stagger.in-view > *:nth-child(8) { transition-delay: 0.4s; }
.stagger.in-view > *:nth-child(9) { transition-delay: 0.45s; }
.stagger.in-view > *:nth-child(10) { transition-delay: 0.5s; }
.stagger.in-view > *:nth-child(n+11) { transition-delay: 0.55s; }

.stagger.in-view > * {
    opacity: 1;
    transform: translateY(0);
}

/* 3D倾斜效果 */
.tilt-3d {
    transform-style: preserve-3d;
    perspective: var(--perspective);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
}

.tilt-3d:hover {
    transform: rotateX(var(--tilt-x, 0deg)) rotateY(var(--tilt-y, 0deg)) scale(1.02);
}

/* 磁性效果 */
.magnetic {
    transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    will-change: transform;
}

.magnetic:hover {
    transform: translate(var(--magnetic-x, 0), var(--magnetic-y, 0));
}

/* 波纹效果 */
@keyframes ripple {
    0% {
        transform: scale(0);
        opacity: 0.5;
    }
    100% {
        transform: scale(4);
        opacity: 0;
    }
}

.ripple-effect {
    position: relative;
    overflow: hidden;
}

.ripple-effect::after {
    content: '';
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    width: 100px;
    height: 100px;
    margin-left: -50px;
    margin-top: -50px;
    animation: ripple 0.6s ease-out;
    pointer-events: none;
}

/* 渐变文字动画 */
@keyframes gradientShift {
    0%, 100% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
}

.gradient-text-animated {
    background: var(--gradient-text);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 8s ease infinite;
}

/* 闪烁光泽效果 */
@keyframes shine {
    0% {
        transform: translateX(-100%) translateY(-100%) rotate(30deg);
    }
    100% {
        transform: translateX(100%) translateY(100%) rotate(30deg);
    }
}

.shine-effect {
    position: relative;
    overflow: hidden;
}

.shine-effect::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
    );
    transform: translateX(-100%) translateY(-100%) rotate(30deg);
}

.shine-effect:hover::before {
    animation: shine 0.6s ease;
}

/* 针对减少动画偏好的用户，提供更温和的动画效果 */
.reduced-motion .viewport-element {
    transition: opacity 0.3s ease;
    transform: none;
}

.reduced-motion .progressive-image {
    transition: opacity 0.3s ease-in-out;
}

@media (prefers-reduced-motion: reduce) {
    .text-reveal .char,
    .stagger > *,
    .tilt-3d,
    .magnetic,
    .gradient-text-animated,
    .shine-effect::before {
        animation: none !important;
        transition: opacity 0.3s ease !important;
    }

    .tilt-3d:hover {
        transform: none !important;
    }
}

/* 部分可见模块支持 */
.section-visible {
    display: block;
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    transition: opacity 0.5s ease, transform 0.5s ease, visibility 0.5s ease;
}

.grid-visible {
    display: grid;
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s ease, visibility 0.5s ease;
}

.item-visible {
    display: block;
    opacity: 1;
    visibility: visible;
    transition: opacity 0.4s ease, visibility 0.4s ease;
}

/* 为不同尺寸设备优化的懒加载占位符 */
.placeholder {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    transition: opacity 0.3s ease;
}

.placeholder.hidden {
    opacity: 0;
}
